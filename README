This is absolutely experimental code. It is just public in case someone
is interested in development.

This repository contains the beginning of a django application that can be
used as a frontend for SDAPS. Some of the basic ideas:
 * Leave the current SDAPS codebase pretty much unchanged for now.
   This primarily means we do not touch the data model for now, and
   stay with the pickled data storage.
   This probably means that storing corrections will be very inefficient
   for now.
 * Editing is done by dynamically building a LaTeX file for the questions.
   Questionnaires can be designed directly in django.
   Previewing is done using pdf.js.
 * Long running tasks are executed in the background using celery.

Anyone interested in moving this forwared please drop me a line. Note that I
have not yet attached a license to it (probably GPLv3+, but I am thinking
about using some AGPL like license).

Well, that is about it for now.


----

What is working (sort of):
 * Running background tasks using celery
 * Running recognition
 * Building a questionnaire (LaTeX document)
 * Changing the questionnaire ussing angular.js
 * pdf.js based preview is working

What is missing:
 * PDF Preview widget needs proper UI
 * All pages (especially editing page) need a proper stylesheet/structure.
 * Django templats need to be reworked
 * User/rights management
 * Code to upload scans (using jquery file uploader, client and server,
   this should also support chunked transfers to be able to resume uploads)
 * UI to correct results (especially saving the changes as that is likely
   very inefficient)
   * Client Side (what framework, also angular?)
   * Server Side
 * General thoughts about usability:
   * How are surveys managed?
   * Should they be grouped?
   * How should they be sorted?
   * What should be done about surveys that are finished?
   * What kind of permission management could be interesting?

